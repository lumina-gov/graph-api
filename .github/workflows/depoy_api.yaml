name: deploy_api
on: push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        continue-on-error: true
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
      - name: Install Zig toolchain
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.10.0
      - name: Install Cargo Lambda
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-lambda
      - name: Load Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo lambda build --release --arm64

      - name: Install AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
        # we might want to zip here instead of deploying as a binary
      - name: Deploy
        run: |
          cargo lambda deploy \
            --iam-role arn:aws:iam::739724808938:role/cargo-lambda-role-f534bf82-46e3-4113-b8fe-66714d3d0b3f \
            --binary-name graph-api \
            --env-var DATABASE_URL=$DATABASE_URL \
            --env-var JWT_SECRET=$JWT_SECRET \
            --env-var LIGHT_UNIVERSITY_PRICE_ID=$LIGHT_UNIVERSITY_PRICE_ID \
            --env-var STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY \
            --env-var TEST=TEST \
            graph-api-${GITHUB_REF##*/}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          LIGHT_UNIVERSITY_PRICE_ID: ${{ secrets.LIGHT_UNIVERSITY_PRICE_ID }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}