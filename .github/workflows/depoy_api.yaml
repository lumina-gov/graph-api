name: deploy_api
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use arm architecture
        run: sudo dpkg --add-architecture arm64
      - name: Update apt-get
        run: sudo apt-get update
        continue-on-error: true
      - name: Install libpq
        run: sudo apt-get install libpq-dev
      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
      - name: Cargo clean
        run: cargo clean
      - name: Install Cargo Lambda
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-lambda

      - name: Install AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Load Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Rustup target
        run: rustup target add aarch64-unknown-linux-gnu
      - name: Build
        run: cargo lambda build --compiler cargo --arm64 --release

        # we might want to zip here instead of deploying as a binary
      - name: Deploy
        run: cargo lambda deploy