//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use async_graphql::Enum;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Copy, Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize, Enum,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "assessment")]
pub enum Assessment {
    #[sea_orm(string_value = "FAIL")]
    Fail,
    #[sea_orm(string_value = "PASS")]
    Pass,
    #[sea_orm(string_value = "SOFT_PASS")]
    SoftPass,
    #[sea_orm(string_value = "UNKNOWN")]
    Unknown,
}
#[derive(
    Copy, Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize, Enum,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "unit_status")]
pub enum UnitStatus {
    #[sea_orm(string_value = "Completed")]
    Completed,
    #[sea_orm(string_value = "InProgress")]
    InProgress,
    #[sea_orm(string_value = "NotStarted")]
    NotStarted,
}
